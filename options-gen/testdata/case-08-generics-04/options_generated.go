// Code generated by options-gen qa-version. DO NOT EDIT.

package testcase

type OptOptionsSetter[T comparable] func(o *Options[T])

func NewOptions[T comparable](
	d1 SomeData[T],
	d2 *SomeData[T],
	options ...OptOptionsSetter[T],
) Options[T] {
	var o Options[T]

	// Setting defaults from field tag (if present)

	o.d1 = d1
	o.d2 = d2

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func WithD3[T comparable](opt SomeData[T]) OptOptionsSetter[T] {
	return func(o *Options[T]) {
		o.d3 = opt
	}
}

func WithD4[T comparable](opt *SomeData[T]) OptOptionsSetter[T] {
	return func(o *Options[T]) {
		o.d4 = opt
	}
}

func (o *Options[T]) Validate() error {
	return nil
}
