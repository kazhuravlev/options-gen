// Code generated by options-gen. DO NOT EDIT.

package testcase

import (
	fmt461e464ebed9 "fmt"

	errors461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/errors"
	validator461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/validator"
)

type optField int8

const (
	Fieldamount optField = 0
	Fieldage    optField = 1
)

var optIsSet = [2]bool{}

type OptOptionsSetter func(o *Options)

func NewOptions(
	amount int,
	age int,
	options ...OptOptionsSetter,
) Options {
	o := Options{}

	var empty [2]bool
	optIsSet = empty

	// Setting defaults from field tag (if present)

	o.amount = amount
	optIsSet[Fieldamount] = true
	o.age = age
	optIsSet[Fieldage] = true

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func (o *Options) Validate() error {
	errs := new(errors461e464ebed9.ValidationErrors)
	errs.Add(errors461e464ebed9.NewValidationError("age", _validate_Options_age(o)))
	return errs.AsError()
}

func (o *Options) IsSet(field optField) bool {
	return optIsSet[field]
}

func _validate_Options_age(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.age, "child"); err != nil {
		return fmt461e464ebed9.Errorf("field `age` did not pass the test: %w", err)
	}
	return nil
}
