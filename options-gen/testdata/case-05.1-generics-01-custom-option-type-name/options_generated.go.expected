// Code generated by options-gen qa-version. DO NOT EDIT.

package testcase

import (
	fmt461e464ebed9 "fmt"

	errors461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/errors"
	validator461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/validator"
)

type CustomOpt[T string] func(o *Options[T])

func NewOptions[T string](
	requiredKey T,
	key T,
	options ...CustomOpt[T],
) Options[T] {
	o := Options[T]{}

	// Setting defaults from field tag (if present)

	o.requiredKey = requiredKey

	o.key = key

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func WithSomeOptKey[T string](opt T) CustomOpt[T] {
	return func(o *Options[T]) {
		o.optKey = opt

	}
}

func (o *Options[T]) Validate() error {
	errs := new(errors461e464ebed9.ValidationErrors)
	errs.Add(errors461e464ebed9.NewValidationError("requiredKey", _validate_Options_requiredKey[T](o)))
	return errs.AsError()
}

func _validate_Options_requiredKey[T string](o *Options[T]) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.requiredKey, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `requiredKey` did not pass the test: %w", err)
	}
	return nil
}
