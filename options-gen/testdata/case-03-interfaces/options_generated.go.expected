// Code generated by options-gen qa-version. DO NOT EDIT.

package testcase

import (
	"fmt"
	"io"
)

type OptOptionsSetter func(o *Options)

func NewOptions(
	any any,
	stringer fmt.Stringer,
	rWCloser io.ReadWriteCloser,
	local localInterface,
	options ...OptOptionsSetter,
) Options {
	var o Options

	// Setting defaults from field tag (if present)

	o.any = any
	o.stringer = stringer
	o.rWCloser = rWCloser
	o.local = local

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func WithOptAny(opt any) OptOptionsSetter {
	return func(o *Options) {
		o.optAny = opt
	}
}

func WithOptStringer(opt fmt.Stringer) OptOptionsSetter {
	return func(o *Options) {
		o.optStringer = opt
	}
}

func WithOptRWCloser(opt io.ReadWriteCloser) OptOptionsSetter {
	return func(o *Options) {
		o.optRWCloser = opt
	}
}

func WithOptLocal(opt localInterface) OptOptionsSetter {
	return func(o *Options) {
		o.optLocal = opt
	}
}

func (o *Options) Validate() error {
	return nil
}
