// Code generated by options-gen qa-version. DO NOT EDIT.

package gogenerate

import (
	fmt461e464ebed9 "fmt"
	"net/http"

	errors461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/errors"
	validator461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/validator"
)

type OptOptionsSetter func(o *Options)

func NewOptions(
	httpClient *http.Client,
	token string,
	options ...OptOptionsSetter,
) Options {
	var o Options

	// Setting defaults from field tag (if present)

	o.addr = "127.0.0.1:8000"

	o.httpClient = httpClient
	o.token = token

	for _, opt := range options {
		opt(&o)
	}
	return o
}

// Address that will be used for each request to the remote server.
//
// By default, it will be set to 127.0.0.1:8000
func WithAddr(opt string) OptOptionsSetter {
	return func(o *Options) { o.addr = opt }
}

func (o *Options) Validate() error {
	errs := new(errors461e464ebed9.ValidationErrors)
	errs.Add(errors461e464ebed9.NewValidationError("httpClient", _validate_Options_httpClient(o)))
	return errs.AsError()
}

func _validate_Options_httpClient(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.httpClient, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `httpClient` did not pass the test: %w", err)
	}
	return nil
}
